layer {
  name: "data"
  type: "Python"
  top: "Python1"
  top: "Python2"
  top: "Python3"
  top: "Python4"
  include {
    phase: TRAIN
  }
  python_param {
    module: "bcl_layers"
    layer: "InputKittiData"
    param_str: "{\'config_path\': \'../second/configs/car.fhd.config\', \'model_dir\': \'./exp/BaseLine\', \'subset\': \'train\', \'anchors_cachae\': False}"
  }
}
layer {
  name: "Python5"
  type: "Python"
  bottom: "Python1"
  top: "Python5"
  top: "Python6"
  python_param {
    module: "bcl_layers"
    layer: "BCLReshape"
  }
}
layer {
  name: "bcl_seg_scale_0"
  type: "Python"
  bottom: "Python6"
  top: "bcl_seg_scale_0"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*16_1*16_2*16"
  }
}
layer {
  name: "bcl_seg_0"
  type: "Permutohedral"
  bottom: "Python5"
  bottom: "bcl_seg_scale_0"
  bottom: "bcl_seg_scale_0"
  top: "bcl_seg_0"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 64
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_seg_bn_0"
  type: "BatchNorm"
  bottom: "bcl_seg_0"
  top: "bcl_seg_bn_0"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_seg_sc_0"
  type: "Scale"
  bottom: "bcl_seg_bn_0"
  top: "bcl_seg_sc_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_seg_relu_0"
  type: "ReLU"
  bottom: "bcl_seg_sc_0"
  top: "bcl_seg_sc_0"
}
layer {
  name: "bcl_seg_scale_1"
  type: "Python"
  bottom: "Python6"
  top: "bcl_seg_scale_1"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*8_1*8_2*8"
  }
}
layer {
  name: "bcl_seg_1"
  type: "Permutohedral"
  bottom: "bcl_seg_sc_0"
  bottom: "bcl_seg_scale_1"
  bottom: "bcl_seg_scale_1"
  top: "bcl_seg_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 128
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_seg_bn_1"
  type: "BatchNorm"
  bottom: "bcl_seg_1"
  top: "bcl_seg_bn_1"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_seg_sc_1"
  type: "Scale"
  bottom: "bcl_seg_bn_1"
  top: "bcl_seg_sc_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_seg_relu_1"
  type: "ReLU"
  bottom: "bcl_seg_sc_1"
  top: "bcl_seg_sc_1"
}
layer {
  name: "bcl_seg_scale_2"
  type: "Python"
  bottom: "Python6"
  top: "bcl_seg_scale_2"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*4_1*4_2*4"
  }
}
layer {
  name: "bcl_seg_2"
  type: "Permutohedral"
  bottom: "bcl_seg_sc_1"
  bottom: "bcl_seg_scale_2"
  bottom: "bcl_seg_scale_2"
  top: "bcl_seg_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 128
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_seg_bn_2"
  type: "BatchNorm"
  bottom: "bcl_seg_2"
  top: "bcl_seg_bn_2"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_seg_sc_2"
  type: "Scale"
  bottom: "bcl_seg_bn_2"
  top: "bcl_seg_sc_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_seg_relu_2"
  type: "ReLU"
  bottom: "bcl_seg_sc_2"
  top: "bcl_seg_sc_2"
}
layer {
  name: "bcl_seg_scale_3"
  type: "Python"
  bottom: "Python6"
  top: "bcl_seg_scale_3"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*2_1*2_2*2"
  }
}
layer {
  name: "bcl_seg_3"
  type: "Permutohedral"
  bottom: "bcl_seg_sc_2"
  bottom: "bcl_seg_scale_3"
  bottom: "bcl_seg_scale_3"
  top: "bcl_seg_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 64
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_seg_bn_3"
  type: "BatchNorm"
  bottom: "bcl_seg_3"
  top: "bcl_seg_bn_3"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_seg_sc_3"
  type: "Scale"
  bottom: "bcl_seg_bn_3"
  top: "bcl_seg_sc_3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_seg_relu_3"
  type: "ReLU"
  bottom: "bcl_seg_sc_3"
  top: "bcl_seg_sc_3"
}
layer {
  name: "concat"
  type: "Concat"
  bottom: "bcl_seg_sc_0"
  bottom: "bcl_seg_sc_1"
  bottom: "bcl_seg_sc_2"
  bottom: "bcl_seg_sc_3"
  top: "concat"
}
layer {
  name: "conv1_seg_0"
  type: "Convolution"
  bottom: "concat"
  top: "conv1_seg_0"
  param {
    lr_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    engine: CUDNN
  }
}
layer {
  name: "conv1_seg_bn_0"
  type: "BatchNorm"
  bottom: "conv1_seg_0"
  top: "conv1_seg_bn_0"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "conv1_seg_sc_0"
  type: "Scale"
  bottom: "conv1_seg_bn_0"
  top: "conv1_seg_sc_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_seg_relu_0"
  type: "ReLU"
  bottom: "conv1_seg_sc_0"
  top: "conv1_seg_sc_0"
}
layer {
  name: "car_seg"
  type: "Convolution"
  bottom: "conv1_seg_sc_0"
  top: "seg_preds"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 0.10000000149011612
  }
  convolution_param {
    num_output: 1
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    engine: CAFFE
  }
}
layer {
  name: "loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "seg_preds"
  bottom: "Python2"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "seg_preds"
  bottom: "Python2"
  top: "accuracy"
}
layer {
  name: "Python7"
  type: "Python"
  bottom: "Python1"
  top: "Python7"
  top: "Python8"
  python_param {
    module: "bcl_layers"
    layer: "BCLReshape"
  }
}
layer {
  name: "bcl_obj_scale_0"
  type: "Python"
  bottom: "Python8"
  top: "bcl_obj_scale_0"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*4_1*4_2*4"
  }
}
layer {
  name: "bcl_obj_0"
  type: "Permutohedral"
  bottom: "Python7"
  bottom: "bcl_obj_scale_0"
  bottom: "bcl_obj_scale_0"
  top: "bcl_obj_0"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 64
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_obj_bn_0"
  type: "BatchNorm"
  bottom: "bcl_obj_0"
  top: "bcl_obj_bn_0"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_obj_sc_0"
  type: "Scale"
  bottom: "bcl_obj_bn_0"
  top: "bcl_obj_sc_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_obj_relu_0"
  type: "ReLU"
  bottom: "bcl_obj_sc_0"
  top: "bcl_obj_sc_0"
}
layer {
  name: "bcl_obj_scale_1"
  type: "Python"
  bottom: "Python8"
  top: "bcl_obj_scale_1"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0*2_1*2_2*2"
  }
}
layer {
  name: "bcl_obj_1"
  type: "Permutohedral"
  bottom: "bcl_obj_sc_0"
  bottom: "bcl_obj_scale_1"
  bottom: "bcl_obj_scale_1"
  top: "bcl_obj_1"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 128
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_obj_bn_1"
  type: "BatchNorm"
  bottom: "bcl_obj_1"
  top: "bcl_obj_bn_1"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_obj_sc_1"
  type: "Scale"
  bottom: "bcl_obj_bn_1"
  top: "bcl_obj_sc_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_obj_relu_1"
  type: "ReLU"
  bottom: "bcl_obj_sc_1"
  top: "bcl_obj_sc_1"
}
layer {
  name: "bcl_obj_scale_2"
  type: "Python"
  bottom: "Python8"
  top: "bcl_obj_scale_2"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0_1_2"
  }
}
layer {
  name: "bcl_obj_2"
  type: "Permutohedral"
  bottom: "bcl_obj_sc_1"
  bottom: "bcl_obj_scale_2"
  bottom: "bcl_obj_scale_2"
  top: "bcl_obj_2"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 128
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_obj_bn_2"
  type: "BatchNorm"
  bottom: "bcl_obj_2"
  top: "bcl_obj_bn_2"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_obj_sc_2"
  type: "Scale"
  bottom: "bcl_obj_bn_2"
  top: "bcl_obj_sc_2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_obj_relu_2"
  type: "ReLU"
  bottom: "bcl_obj_sc_2"
  top: "bcl_obj_sc_2"
}
layer {
  name: "bcl_obj_scale_3"
  type: "Python"
  bottom: "Python8"
  top: "bcl_obj_scale_3"
  python_param {
    module: "bcl_layers"
    layer: "PickAndScale"
    param_str: "0/2_1/2_2/2"
  }
}
layer {
  name: "bcl_obj_3"
  type: "Permutohedral"
  bottom: "bcl_obj_sc_2"
  bottom: "bcl_obj_scale_3"
  bottom: "bcl_obj_scale_3"
  top: "bcl_obj_3"
  param {
    lr_mult: 1.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 2.0
    decay_mult: 0.0
  }
  permutohedral_param {
    num_output: 64
    neighborhood_size: 1
    filter_filler {
      type: "xavier"
    }
    bias_term: true
    bias_filler {
      type: "constant"
      value: 0.0
    }
    group: 1
    norm_type: AFTER
    offset_type: NONE
  }
}
layer {
  name: "bcl_obj_bn_3"
  type: "BatchNorm"
  bottom: "bcl_obj_3"
  top: "bcl_obj_bn_3"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "bcl_obj_sc_3"
  type: "Scale"
  bottom: "bcl_obj_bn_3"
  top: "bcl_obj_sc_3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "bcl_obj_relu_3"
  type: "ReLU"
  bottom: "bcl_obj_sc_3"
  top: "bcl_obj_sc_3"
}
layer {
  name: "conv1_obj_0"
  type: "Convolution"
  bottom: "bcl_obj_sc_3"
  top: "conv1_obj_0"
  param {
    lr_mult: 1.0
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    engine: CUDNN
  }
}
layer {
  name: "conv1_obj_bn_0"
  type: "BatchNorm"
  bottom: "conv1_obj_0"
  top: "conv1_obj_bn_0"
  batch_norm_param {
    moving_average_fraction: 0.9900000095367432
    eps: 0.0010000000474974513
  }
}
layer {
  name: "conv1_obj_sc_0"
  type: "Scale"
  bottom: "conv1_obj_bn_0"
  top: "conv1_obj_sc_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_obj_relu_0"
  type: "ReLU"
  bottom: "conv1_obj_sc_0"
  top: "conv1_obj_sc_0"
}
layer {
  name: "cls_head"
  type: "Convolution"
  bottom: "conv1_obj_sc_0"
  top: "cls_preds"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 1.0
  }
  convolution_param {
    num_output: 2
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    engine: CAFFE
  }
}
layer {
  name: "reg_head"
  type: "Convolution"
  bottom: "conv1_obj_sc_0"
  top: "box_preds"
  param {
    lr_mult: 1.0
  }
  param {
    lr_mult: 1.0
  }
  convolution_param {
    num_output: 14
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
    engine: CAFFE
  }
}
layer {
  name: "PrepareLossWeight"
  type: "Python"
  bottom: "Python3"
  top: "cared"
  top: "reg_outside_weights"
  top: "cls_weights"
  python_param {
    module: "bcl_layers"
    layer: "PrepareLossWeight"
  }
}
layer {
  name: "Label_Encode"
  type: "Python"
  bottom: "Python3"
  bottom: "cared"
  top: "labels_input"
  python_param {
    module: "bcl_layers"
    layer: "LabelEncode"
  }
}
layer {
  name: "Permute1"
  type: "Permute"
  bottom: "cls_preds"
  top: "Permute1"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "Reshape1"
  type: "Reshape"
  bottom: "Permute1"
  top: "Reshape1"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 1
    }
  }
}
layer {
  name: "FocalLoss"
  type: "Python"
  bottom: "Reshape1"
  bottom: "labels_input"
  bottom: "cls_weights"
  top: "cls_loss"
  loss_weight: 1.0
  python_param {
    module: "bcl_layers"
    layer: "WeightFocalLoss"
    param_str: "{\'focusing_parameter\': 2, \'alpha\': 0.25}"
  }
}
layer {
  name: "Permute2"
  type: "Permute"
  bottom: "box_preds"
  top: "Permute2"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "Reshape2"
  type: "Reshape"
  bottom: "Permute2"
  top: "Reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 7
    }
  }
}
layer {
  name: "WeightedSmoothL1Loss"
  type: "Python"
  bottom: "Reshape2"
  bottom: "Python4"
  bottom: "reg_outside_weights"
  top: "reg_loss"
  loss_weight: 1.0
  python_param {
    module: "bcl_layers"
    layer: "WeightedSmoothL1Loss"
  }
}

